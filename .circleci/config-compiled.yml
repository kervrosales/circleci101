# Orb 'circleci/slack@3.4.2' resolved to 'circleci/slack@3.4.2'
# Orb 'testimio/runner@1.1.0' resolved to 'testimio/runner@1.1.0'
version: 2
jobs:
  build:
    docker:
    - image: circleci/python:3.8
    steps:
    - checkout
    - run:
        name: The First Step
        command: |
          if ["${CIRCLE_BRANCH}" == "master"];
          then
            echo 'Hello World!'8
          else
            echo 'This is the delivery pipeline'
          fi
          git log --format='%aN' ${CIRCLE_SHA1}^!
    - run:
        command: |
          if [ ! -x /bin/bash ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: |
          # Provide error if no webhook is set and error. Otherwise continue
          if [ -z "${SLACK_WEBHOOK}" ]; then
            echo "NO SLACK WEBHOOK SET"
            echo "Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
            exit 1
          else
            # Webhook properly set.
            echo Notifying Slack Channel
            #Create Members string
            if [ -n "" ]; then
              IFS="," read -ra SLACK_MEMBERS <<< ""
              for i in "${SLACK_MEMBERS[@]}"; do
                if [ $(echo ${i} | head -c 1) == "S" ]; then
                  SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
                elif echo ${i} | grep -E "^(here|channel|everyone)$" > /dev/null; then
                  SLACK_MENTIONS="${SLACK_MENTIONS}<!${i}> "
                else
                  SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
                fi
              done
            fi
            curl -X POST -H 'Content-type: application/json' \
              --data \
              "{ \
                \"attachments\": [ \
                  { \
                    \"fallback\": \"*Production Deployment*: commit ${CIRCLE_SHA1} by $(git log --format='%aN)) - $CIRCLE_BUILD_URL\", \
                    \"text\": \"*Production Deployment*: commit ${CIRCLE_SHA1} by $(git log --format='%aN)) $SLACK_MENTIONS\", \
                    \"author_name\": \"$(git config user.name)\", \
                    \"author_link\": \"https://github.com/procurify/procurifydevelopment/commits/${CIRCLE_SHA1}\", \
                    \"title\": \"Starting Deployment\", \
                    \"title_link\": \"Commit ID: 123123123\", \
                    \"footer\": \"\", \
                    \"ts\": \"$(date +%s)\", \
                    \"fields\": [ \
                      { \
                        \"title\": \"Job Number\", \
                        \"value\": \"$CIRCLE_BUILD_NUM\", \
                        \"short\": true \
                      } \
                    ], \
                    \"image_url\": \"\", \
                    \"actions\": [ \
                      { \
                        \"type\": \"button\", \
                        \"text\": \"Visit Job\", \
                        \"url\": \"$CIRCLE_BUILD_URL\" \
                      } \
                    ], \
                    \"color\": \"#42e2f4\" \
                  } \
                ] \
              }" ${SLACK_WEBHOOK}
          fi
        name: Slack Notification
        shell: /bin/bash
  staging_deploy-1:
    docker:
    - image: circleci/python:3.8
    steps:
    - deploy:
        name: Staging Deployment
        command: |
          echo 'DEPLOYING STAG!!!'
  testimio/run_tests:
    docker:
    - image: testim/docker-cli
    steps:
    - run:
        name: run tests
        command: |
          mkdir -p /tmp/circleci-test-results
          OPTIONS='' "Regression:Navigation" \
          --base-url https://automation1.procurify.com'
          '
          if [[ -z ${OPTIONS} ]]; then
            testim --project "${TESTIMPROJECT_ID}" \
              --grid "Testim-Grid" \
              --token "${TESTIM_TOKEN}" \
              --report-file /tmp/circleci-test-results/report.xml
          else
            testim --project "${TESTIMPROJECT_ID}" \
              --grid "Testim-Grid" \
              --token "${TESTIM_TOKEN}" \
              --report-file /tmp/circleci-test-results/report.xml \
              ' "Regression:Navigation" \
          --base-url https://automation1.procurify.com'

          fi
    - store_artifacts:
        path: /tmp/circleci-test-results
    - store_test_results:
        path: /tmp/circleci-test-results
  slack/approval-notification:
    docker:
    - environment:
        TERM: dumb
      image: cibuilds/base:latest
    resource_class: small
    steps:
    - run:
        command: |
          if [ ! -x /bin/bash ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: |
          # Provide error if no webhook is set and error. Otherwise continue
          if [ -z "${SLACK_WEBHOOK_CIRCLE}" ]; then
            echo "NO SLACK WEBHOOK SET"
            echo "Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
            exit 1
          else
            #Create Members string
            if [ -n "" ]; then
              IFS="," read -ra SLACK_MEMBERS <<< ""
              for i in "${SLACK_MEMBERS[@]}"; do
                if [ $(echo ${i} | head -c 1) == "S" ]; then
                  SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
                elif echo ${i} | grep -E "^(here|channel|everyone)$" > /dev/null; then
                  SLACK_MENTIONS="${SLACK_MENTIONS}<!${i}> "
                else
                  SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
                fi
              done
            fi

            curl -X POST -H 'Content-type: application/json' \
              --data \
              "{ \
                \"attachments\": [ \
                  { \
                    \"fallback\": \"Waiting Approval on $(git config user.name) - https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}\", \
                    \"text\": \"Waiting Approval on $(git config user.name) $SLACK_MENTIONS\", \
                    \"fields\": [ \
                      { \
                        \"title\": \"Job Number\", \
                        \"value\": \"$CIRCLE_BUILD_NUM\", \
                        \"short\": true \
                      } \
                    ], \
                    \"actions\": [ \
                      { \
                        \"type\": \"button\", \
                        \"text\": \"Visit Workflow\", \
                        \"url\": \"https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}\" \
                      } \
                    ], \
                    \"color\": \"#3AA3E3\" \
                  } \
                ] \
              }" ${SLACK_WEBHOOK_CIRCLE}
            echo "Awaiting approval notified."
          fi
        name: Slack - Sending Approval Notification
        shell: /bin/bash
  staging_deploy-2:
    docker:
    - image: circleci/python:3.8
    steps:
    - deploy:
        name: Staging Deployment
        command: |
          echo 'DEPLOYING STAG!!!'
workflows:
  simple_workflow:
    jobs:
    - build
    - staging_deploy-1
    - testimio/run_tests
    - slack/approval-notification:
        requires:
        - build
    - wait_for_approve:
        type: approval
        requires:
        - testimio/run_tests
    - staging_deploy-2:
        requires:
        - wait_for_approve
  version: 2

# Original config.yml file:
# version: 2.1
# 
# parameters:
#   timestamp:
#     type: string
#     default: $(date +%s)
#   git-author:
#     type: string
#     default: $(git log --format='%aN' ${CIRCLE_SHA1}^!)
#   deployer:
#     type: string
#     default: $(git config user.name)
#   commit-link:
#     type: string
#     default: \"https://github.com/procurify/procurifydevelopment/commits\"
#   
#   
# 
# executors:
#   python-executor:
#     docker:
#       - image: circleci/python:3.8
# aliases:
#   - &ola
#     run:
#       name: say ola
#       command: |
#         echo \"Ola!a\"
# 
# orbs:
#   slack: circleci/slack@3.4.2
#   testimio: testimio/runner@1.1.0
# 
# jobs:
#   build:
#     executor: python-executor
#     steps:
#       - checkout
#       - run:
#           name: The First Step
#           command: |
#             if [\"${CIRCLE_BRANCH}\" == \"master\"];
#             then
#               echo 'Hello World!'8
#             else
#               echo 'This is the delivery pipeline'
#             fi
#             git log --format='%aN' ${CIRCLE_SHA1}^!
#       - slack/notify:
#           color: '#42e2f4'
#           title: Starting Deployment 
#           title_link: 'Commit ID: 123123123'
#           author_name: $(git config user.name)
#           author_link: <<pipeline.parameters.commit-link>>/${CIRCLE_SHA1}
#           include_project_field: false
#           ts:  <<pipeline.parameters.timestamp>>
#           message:
#             \"*Production Deployment*: commit ${CIRCLE_SHA1} by $(git log --format='%aN))\"
#           webhook: ${SLACK_WEBHOOK}
#   staging_deploy:
#     executor: python-executor
#     steps:
#       - deploy:
#           name: Staging Deployment
#           command: |
#             echo 'DEPLOYING STAG!!!'
# 
# workflows:
#   simple_workflow:
#     jobs:
#       - build
#       - staging_deploy
#       - testimio/run_tests:
#           token: ${TESTIM_TOKEN}
#           project_id: ${TESTIMPROJECT_ID}
#           grid_name: 'Testim-Grid'
#           options:  |
#             ' \"Regression:Navigation\" \\
#             --base-url https://automation1.procurify.com'
# 
#       - slack/approval-notification:
#           requires:
#             - build
#           message: Waiting Approval on $(git config user.name)
#           include_project_field: false                   
#           webhook: ${SLACK_WEBHOOK_CIRCLE}
#       - wait_for_approve:
#           type: approval
#           requires:
#             - testimio/run_tests
#       - staging_deploy:
#           requires:
#             - wait_for_approve