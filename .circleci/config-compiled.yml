# Orb 'circleci/slack@3.4.2' resolved to 'circleci/slack@3.4.2'
# Orb 'testimio/runner@1.1.0' resolved to 'testimio/runner@1.1.0'
# Orb 'circleci/sumologic@1.0.6' resolved to 'circleci/sumologic@1.0.6'
version: 2
jobs:
  staging_deploy:
    docker:
    - image: circleci/python:3.8
    steps:
    - attach_workspace:
        at: /home/circleci/project
    - checkout
    - run:
        name: Get Slack ID of user for mentions
        command: |
          AUTHOR_EMAIL=$(git log -n1 --format='%ae' $CIRCLE_SHA1)
          LOOKUP_RESULT=$(curl -s "${SLACK_API_URL}/users.lookupByEmail?token=${SLACK_BOT_TOKEN}&email=${AUTHOR_EMAIL}")
          SUCCESS=$(echo "$LOOKUP_RESULT" | jq ".ok")
          if [[ "$SUCCESS" == "true" ]]; then
            USER_ID=$(echo "$LOOKUP_RESULT" | jq -r ".user.id")
            CHANNEL=$USER_ID
            NAME=$(echo "$LOOKUP_RESULT" | jq -r ".user.name")
            echo "export MENTIONS=${USER_ID}" >> $BASH_ENV
          else
            echo "Couldn't find user with the email \"${AUTHOR_EMAIL}\". Your email in Github must match your email in slack."
          fi
    - run:
        command: cat shared_env >> $BASH_ENV
    - run:
        command: echo ${MY_ENV_VAR}
    - run:
        command: |
          if [ ! -x /bin/bash ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: "# Provide error if no webhook is set and error. Otherwise continue\nif [ -z \"${SLACK_WEBHOOK}\" ]; then\n  echo \"NO SLACK WEBHOOK SET\"\n  echo \"Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb.\"\n  exit 1\nelse\n  #Create Members string\n  if [ -n \"U0286CK1D\" ]; then\n    IFS=\",\" read -ra SLACK_MEMBERS <<< \"U0286CK1D\"\n    for i in \"${SLACK_MEMBERS[@]}\"; do\n      if [ $(echo ${i} | head -c 1) == \"S\" ]; then\n        SLACK_MENTIONS=\"${SLACK_MENTIONS}<!subteam^${i}> \"\n      elif echo ${i} | grep -E \"^(here|channel|everyone)$\" > /dev/null; then\n        SLACK_MENTIONS=\"${SLACK_MENTIONS}<!${i}> \"\n      else\n        SLACK_MENTIONS=\"${SLACK_MENTIONS}<@${i}> \"\n      fi\n    done\n  fi\n\n  curl -X POST -H 'Content-type: application/json' \\\n    --data \\\n    \"{ \\\n      \\\"attachments\\\": [ \\\n        { \\\n          \\\"fallback\\\": \\\"*Pending Deployment* \n *Commit ID* :\n <https://github.com/procurify/procurifydevelopment/commits/${CIRCLE_SHA1}|${CIRCLE_SHA1}> \n *Approver:*\n - https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}\\\", \\\n          \\\"text\\\": \\\"*Pending Deployment* \n *Commit ID* :\n <https://github.com/procurify/procurifydevelopment/commits/${CIRCLE_SHA1}|${CIRCLE_SHA1}> \n *Approver:*\n $SLACK_MENTIONS\\\", \\\n          \\\"fields\\\": [ \\\n            { \\\n              \\\"title\\\": \\\"Job Number\\\", \\\n              \\\"value\\\": \\\"$CIRCLE_BUILD_NUM\\\", \\\n              \\\"short\\\": true \\\n            } \\\n          ], \\\n          \\\"actions\\\": [ \\\n            { \\\n              \\\"type\\\": \\\"button\\\", \\\n              \\\"text\\\": \\\"Visit Workflow\\\", \\\n              \\\"url\\\": \\\"https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}\\\" \\\n            } \\\n          ], \\\n          \\\"color\\\": \\\"#0098a6\\\" \\\n        } \\\n      ] \\\n    }\" ${SLACK_WEBHOOK}\n  echo \"Awaiting approval notified.\"\nfi\n"
        name: Slack - Sending Approval Notification
        shell: /bin/bash
  slack/approval-notification:
    docker:
    - environment:
        TERM: dumb
      image: cibuilds/base:latest
    resource_class: small
    steps:
    - run:
        command: |
          if [ ! -x /bin/bash ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: "# Provide error if no webhook is set and error. Otherwise continue\nif [ -z \"${SLACK_WEBHOOK}\" ]; then\n  echo \"NO SLACK WEBHOOK SET\"\n  echo \"Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb.\"\n  exit 1\nelse\n  #Create Members string\n  if [ -n \"${MENTIONS}\" ]; then\n    IFS=\",\" read -ra SLACK_MEMBERS <<< \"${MENTIONS}\"\n    for i in \"${SLACK_MEMBERS[@]}\"; do\n      if [ $(echo ${i} | head -c 1) == \"S\" ]; then\n        SLACK_MENTIONS=\"${SLACK_MENTIONS}<!subteam^${i}> \"\n      elif echo ${i} | grep -E \"^(here|channel|everyone)$\" > /dev/null; then\n        SLACK_MENTIONS=\"${SLACK_MENTIONS}<!${i}> \"\n      else\n        SLACK_MENTIONS=\"${SLACK_MENTIONS}<@${i}> \"\n      fi\n    done\n  fi\n\n  curl -X POST -H 'Content-type: application/json' \\\n    --data \\\n    \"{ \\\n      \\\"attachments\\\": [ \\\n        { \\\n          \\\"fallback\\\": \\\"*This Deployment is waiting for approval from*: \n ${CIRCLE_USERNAME}\n *Commit ID* :\n <https://github.com/procurify/procurifydevelopment/commits/${CIRCLE_SHA1}|${CIRCLE_SHA1}> \n  - https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}\\\", \\\n          \\\"text\\\": \\\"*This Deployment is waiting for approval from*: \n ${CIRCLE_USERNAME}\n *Commit ID* :\n <https://github.com/procurify/procurifydevelopment/commits/${CIRCLE_SHA1}|${CIRCLE_SHA1}> \n  $SLACK_MENTIONS\\\", \\\n          \\\"fields\\\": [ \\\n            { \\\n              \\\"title\\\": \\\"Job Number\\\", \\\n              \\\"value\\\": \\\"$CIRCLE_BUILD_NUM\\\", \\\n              \\\"short\\\": true \\\n            } \\\n          ], \\\n          \\\"actions\\\": [ \\\n            { \\\n              \\\"type\\\": \\\"button\\\", \\\n              \\\"text\\\": \\\"Visit Workflow\\\", \\\n              \\\"url\\\": \\\"https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}\\\" \\\n            } \\\n          ], \\\n          \\\"color\\\": \\\"#3AA3E3\\\" \\\n        } \\\n      ] \\\n    }\" ${SLACK_WEBHOOK}\n  echo \"Awaiting approval notified.\"\nfi\n"
        name: Slack - Sending Approval Notification
        shell: /bin/bash
  build:
    docker:
    - image: circleci/python:3.8
    steps:
    - checkout
    - attach_workspace:
        at: /home/circleci/project
    - run:
        name: create share environment variables in bash
        command: "echo 'export MY_ENV_VAR=\"FOO\"' >> shared_env\ncat shared_env >> $BASH_ENV \n"
    - run:
        name: What was my custom environment variable?
        command: echo ${MY_ENV_VAR}
    - run:
        command: |
          if [ ! -x /bin/bash ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: "# Provide error if no webhook is set and error. Otherwise continue\nif [ -z \"${SLACK_WEBHOOK}\" ]; then\n  echo \"NO SLACK WEBHOOK SET\"\n  echo \"Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb.\"\n  exit 1\nelse\n  # Webhook properly set.\n  echo Notifying Slack Channel\n  #Create Members string\n  if [ -n \"${MENTIONS}\" ]; then\n    IFS=\",\" read -ra SLACK_MEMBERS <<< \"${MENTIONS}\"\n    for i in \"${SLACK_MEMBERS[@]}\"; do\n      if [ $(echo ${i} | head -c 1) == \"S\" ]; then\n        SLACK_MENTIONS=\"${SLACK_MENTIONS}<!subteam^${i}> \"\n      elif echo ${i} | grep -E \"^(here|channel|everyone)$\" > /dev/null; then\n        SLACK_MENTIONS=\"${SLACK_MENTIONS}<!${i}> \"\n      else\n        SLACK_MENTIONS=\"${SLACK_MENTIONS}<@${i}> \"\n      fi\n    done\n  fi\n  curl -X POST -H 'Content-type: application/json' \\\n    --data \\\n    \"{ \\\n      \\\"attachments\\\": [ \\\n        { \\\n          \\\"fallback\\\": \\\"*Deployment Started* \n *Commit ID* :\n <https://github.com/procurify/procurifydevelopment/commits/${CIRCLE_SHA1}|${CIRCLE_SHA1}> \n *By:*\n - $CIRCLE_BUILD_URL\\\", \\\n          \\\"text\\\": \\\"*Deployment Started* \n *Commit ID* :\n <https://github.com/procurify/procurifydevelopment/commits/${CIRCLE_SHA1}|${CIRCLE_SHA1}> \n *By:*\n $SLACK_MENTIONS\\\", \\\n          \\\"author_name\\\": \\\"\\\", \\\n          \\\"author_link\\\": \\\"\\\", \\\n          \\\"title\\\": \\\"\\\", \\\n          \\\"title_link\\\": \\\"\\\", \\\n          \\\"footer\\\": \\\"\\\", \\\n          \\\"ts\\\": \\\"$(date +%s)\\\", \\\n          \\\"fields\\\": [ \\\n            { \\\n              \\\"title\\\": \\\"Job Number\\\", \\\n              \\\"value\\\": \\\"$CIRCLE_BUILD_NUM\\\", \\\n              \\\"short\\\": true \\\n            } \\\n          ], \\\n          \\\"image_url\\\": \\\"\\\", \\\n          \\\"actions\\\": [ \\\n            { \\\n              \\\"type\\\": \\\"button\\\", \\\n              \\\"text\\\": \\\"Visit Job\\\", \\\n              \\\"url\\\": \\\"$CIRCLE_BUILD_URL\\\" \\\n            } \\\n          ], \\\n          \\\"color\\\": \\\"#333333\\\" \\\n        } \\\n      ] \\\n    }\" ${SLACK_WEBHOOK}\nfi\n"
        name: Slack Notification
        shell: /bin/bash
    - persist_to_workspace:
        root: /home/circleci/project
        paths:
        - .
workflows:
  simple_workflow:
    jobs:
    - staging_deploy
    - slack/approval-notification:
        requires:
        - staging_deploy
    - wait_for_approve:
        type: approval
    - build
  version: 2

# Original config.yml file:
# version: 2.1
# 
# parameters:
#   timestamp:
#     type: string
#     default: $(date +%s)
#   git-author:
#     type: string
#     default: $(git log --format='%aN' ${CIRCLE_SHA1}^!)
#   deployer:
#     type: string
#     default: $(git config user.name)
#   SLACK-API-URL:
#     type: string
#     default: \"https://slack.com/api\"
# 
# variables:
#   - &workspace /home/circleci/project
# 
# executors:
#   python-executor:
#     docker:
#       - image: circleci/python:3.8
#   testim-cli:
#     docker:
#       - image: testim/docker-cli
# aliases:
#   - &ola
#       name: say ola
#       command: |
#         echo \"Ola!a\"
# 
#   - &get-slack-id
#       name: Get Slack ID of user for mentions
#       command: |
#         AUTHOR_EMAIL=$(git log -n1 --format='%ae' $CIRCLE_SHA1)
#         LOOKUP_RESULT=$(curl -s \"${SLACK_API_URL}/users.lookupByEmail?token=${SLACK_BOT_TOKEN}&email=${AUTHOR_EMAIL}\")
#         SUCCESS=$(echo \"$LOOKUP_RESULT\" | jq \".ok\")
#         if [[ \"$SUCCESS\" == \"true\" ]]; then
#           USER_ID=$(echo \"$LOOKUP_RESULT\" | jq -r \".user.id\")
#           CHANNEL=$USER_ID
#           NAME=$(echo \"$LOOKUP_RESULT\" | jq -r \".user.name\")
#           echo \"export MENTIONS=${USER_ID}\" >> $BASH_ENV
#         else
#           echo \"Couldn't find user with the email \\\"${AUTHOR_EMAIL}\\\". Your email in Github must match your email in slack.\"
#         fi
# 
# orbs:
#   slack: circleci/slack@3.4.2
#   testimio: testimio/runner@1.1.0
#   sumologic: circleci/sumologic@1.0.6
# 
# jobs:
#   build:
#     executor: python-executor
#     steps:
#       - checkout
#       - attach_workspace:
#           at: /home/circleci/project
#       - run: 
#           name: create share environment variables in bash 
#           command: |
#             echo 'export MY_ENV_VAR=\"FOO\"' >> shared_env
#             cat shared_env >> $BASH_ENV 
#            
#       - run:
#           name: \"What was my custom environment variable?\"
#           command: echo ${MY_ENV_VAR}
#           
#       - slack/notify:
#           include_project_field: false
#           ts:  <<pipeline.parameters.timestamp>>
#           message: \"*Deployment Started* \\n
#             *Commit ID* :\\n
#             <https://github.com/procurify/procurifydevelopment/commits/${CIRCLE_SHA1}|${CIRCLE_SHA1}> \\n
#             *By:*\\n\"
#           mentions: '${MENTIONS}'
#           webhook: ${SLACK_WEBHOOK}
#       - persist_to_workspace:
#           root: /home/circleci/project
#           paths:
#             - .
# 
#   staging_deploy:
#     executor: python-executor
#     steps:
#       - attach_workspace:
#           at: /home/circleci/project
#       - checkout
#       - run: *get-slack-id
#       - run: cat shared_env >> $BASH_ENV 
#       - run: echo ${MY_ENV_VAR}
#       - slack/approval:
#           color: '#0098a6'
#           mentions: 'U0286CK1D'
#           message: \"*Pending Deployment* \\n
#              *Commit ID* :\\n
#             <https://github.com/procurify/procurifydevelopment/commits/${CIRCLE_SHA1}|${CIRCLE_SHA1}> \\n
#             *Approver:*\\n\"
#           include_project_field: false                   
#           webhook: ${SLACK_WEBHOOK}
# workflows:
#   simple_workflow:
#     jobs:
#       - staging_deploy
#       - slack/approval-notification:
#           requires:
#             - staging_deploy
#           mentions: ${MENTIONS}
#           message: \"*This Deployment is waiting for approval from*: \\n
#               ${CIRCLE_USERNAME}\\n
#              *Commit ID* :\\n
#             <https://github.com/procurify/procurifydevelopment/commits/${CIRCLE_SHA1}|${CIRCLE_SHA1}> \\n
#               \"
#           include_project_field: false                   
#           webhook: ${SLACK_WEBHOOK}
#       - wait_for_approve:
#           type: approval
#       - build
#           