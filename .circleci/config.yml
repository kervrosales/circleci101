version: 2.1

parameters:
  timestamp:
    type: string
    default: $(date +%s)
  
  

executors:
  python-executor:
    docker:
      - image: circleci/python:3.8
aliases:
  - &ola
    run:
      name: say ola
      command: |
        echo "Ola!a"

orbs:
  slack: circleci/slack@3.4.2
  testimio: testimio/runner@1.1.0

jobs:
  build:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: The First Step
          command: |
            if ["${CIRCLE_BRANCH}" == "master"];
            then
              echo 'Hello World!'8
            else
              echo 'This is the delivery pipeline'
            fi
            git log --format='%aN' ${CIRCLE_SHA1}^!
            GIT_AUTHOR=$(git log --format='%aN' ${CIRCLE_SHA1}^!)
      - slack/notify:
          color: '#42e2f4'
          title: Starting Deployment 
          title_link: 'Commit ID: 123123123'
          include_project_field: false
          ts:  <<pipeline.parameters.timestamp>>
          message:
            "\n> *Git Author*: $(git log --format='%aN' ${CIRCLE_SHA1}^!)\n>*Deployer*: $(git config user.name)\
             \n> *Git Commit* ${CIRCLE_SHA1}:\n>"
          webhook: ${SLACK_WEBHOOK}
  staging_deploy:
    executor: python-executor
    steps:
      - deploy:
          name: Staging Deployment
          command: |
            echo 'DEPLOYING STAG!!!'

workflows:
  simple_workflow:
    jobs:
      - build
      - staging_deploy
      - testimio/run_tests:
          token: ${TESTIM_TOKEN}
          project_id: ${TESTIMPROJECT_ID}
          grid_name: 'Testim-Grid'
          options:  |
            ' --test-plan "Regression:AP" --test-plan "Regression:ApprovalRouting" --test-plan "Regression:Finance" \
            --test-plan "Regression:Request" --test-plan "Regression:Approval" --test-plan "Regression:LocationsAndUsers" \
            --test-plan "Regression:Procure" --test-plan "Regression:Receive" --test-plan "Regression:Navigation" \
            --base-url https://automation1.procurify.com'
            
      - slack/approval-notification:
          requires:
            - build
          message: Waiting Approval on $(git config user.name)
          include_project_field: false                   
          webhook: ${SLACK_WEBHOOK_CIRCLE}
      - wait_for_approve:
          type: approval
          requires:
            - testimio/run_tests
      - staging_deploy:
          requires:
            - wait_for_approve