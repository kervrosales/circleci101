version: 2.1

parameters:
  timestamp:
    type: string
    default: $(date +%s)
  git-author:
    type: string
    default: $(git log --format='%aN' ${CIRCLE_SHA1}^!)
  deployer:
    type: string
    default: $(git config user.name)
  SLACK-API-URL:
    type: string
    default: "https://slack.com/api"
  

executors:
  python-executor:
    docker:
      - image: circleci/python:3.8
aliases:
  - &ola
    run:
      name: say ola
      command: |
        echo "Ola!a"

orbs:
  slack: circleci/slack@3.4.2
  testimio: testimio/runner@1.1.0

jobs:
  build:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: The First Step
          command: |
            if ["${CIRCLE_BRANCH}" == "master"];
            then
              echo 'Hello World!'8
            else
              echo 'This is the delivery pipeline'
            fi
            git log --format='%aN' ${CIRCLE_SHA1}^!
      - run:  
          name: get slack id
          command: |
            AUTHOR_EMAIL=$(git log -n1 --format='%ae' $CIRCLE_SHA1)
            LOOKUP_RESULT=$(curl -s "${SLACK_API_URL}/users.lookupByEmail?token=${SLACK_BOT_TOKEN}&email=${AUTHOR_EMAIL}")
            SUCCESS=$(echo "$LOOKUP_RESULT" | jq ".ok")
            if [[ "$SUCCESS" == "true" ]]; then
              USER_ID=$(echo "$LOOKUP_RESULT" | jq -r ".user.id")
              CHANNEL=$USER_ID
              NAME=$(echo "$LOOKUP_RESULT" | jq -r ".user.name")
              echo "export MENTIONS=${USER_ID}" >> $BASH_ENV
            fi
      - slack/notify:
          include_project_field: false
          ts:  <<pipeline.parameters.timestamp>>
          message: "*Deployment Started* \n
            *Commit ID* :\n
            <https://github.com/procurify/procurifydevelopment/commits/${CIRCLE_SHA1}|${CIRCLE_SHA1}> \n
            *By:*\n"
          mentions: '${MENTIONS}'
          webhook: ${SLACK_WEBHOOK}

  staging_deploy:
    executor: python-executor
    steps:
      - checkout
      - run:  
          name: get slack id
          command: |
            AUTHOR_EMAIL=$(git log -n1 --format='%ae' $CIRCLE_SHA1)
            LOOKUP_RESULT=$(curl -s "${SLACK_API_URL}/users.lookupByEmail?token=${SLACK_BOT_TOKEN}&email=${AUTHOR_EMAIL}")
            SUCCESS=$(echo "$LOOKUP_RESULT" | jq ".ok")
            if [[ "$SUCCESS" == "true" ]]; then
              USER_ID=$(echo "$LOOKUP_RESULT" | jq -r ".user.id")
              CHANNEL=$USER_ID
              NAME=$(echo "$LOOKUP_RESULT" | jq -r ".user.name")
              echo "export MENTIONS=${USER_ID}" >> $BASH_ENV
            fi
      - slack/approval:
          color: '#0098a6'
          mentions: '${MENTIONS},U0286CK1D'
          message: "*Pending Deployment* \n
             *Commit ID* :\n
            <https://github.com/procurify/procurifydevelopment/commits/${CIRCLE_SHA1}|${CIRCLE_SHA1}> \n
            *Approver:*\n"
          include_project_field: false                   
          webhook: ${SLACK_WEBHOOK}
workflows:
  simple_workflow:
    jobs:
      - staging_deploy
      - slack/approval-notification:
          requires:
            - staging_deploy
          mentions: ${MENTIONS}
          message: "*This Deployment is waiting for approval from*: \n
              ${CIRCLE_USERNAME}\n
             *Commit ID* :\n
            <https://github.com/procurify/procurifydevelopment/commits/${CIRCLE_SHA1}|${CIRCLE_SHA1}> \n
              "
          include_project_field: false                   
          webhook: ${SLACK_WEBHOOK}
      - wait_for_approve:
          type: approval
      - build
          