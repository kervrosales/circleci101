# Orb 'circleci/slack@3.4.2' resolved to 'circleci/slack@3.4.2'
version: 2
jobs:
  build:
    docker:
    - image: circleci/python:3.8
    steps:
    - run:
        name: The First Step
        command: |
          echo 'Hello World!'
          echo 'This is the delivery pipeline'
    - run:
        name: say ola
        command: |
          echo "Ola!"
  test:
    docker:
    - image: circleci/python:3.8
    steps:
    - run:
        name: The First Step
        command: |
          echo 'Hello World!'
          echo 'This is the delivery pipeline'
    - run:
        command: |
          if [ ! -x /bin/bash ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: |
          # Provide error if no webhook is set and error. Otherwise continue
          if [ -z "${SLACK_WEBHOOK}" ]; then
            echo "NO SLACK WEBHOOK SET"
            echo "Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
            exit 1
          else
            # Webhook properly set.
            echo Notifying Slack Channel
            #Create Members string
            if [ -n "" ]; then
              IFS="," read -ra SLACK_MEMBERS <<< ""
              for i in "${SLACK_MEMBERS[@]}"; do
                if [ $(echo ${i} | head -c 1) == "S" ]; then
                  SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
                elif echo ${i} | grep -E "^(here|channel|everyone)$" > /dev/null; then
                  SLACK_MENTIONS="${SLACK_MENTIONS}<!${i}> "
                else
                  SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
                fi
              done
            fi
            curl -X POST -H 'Content-type: application/json' \
              --data \
              "{ \
                \"attachments\": [ \
                  { \
                    \"fallback\": \"This is a custom message notification - $CIRCLE_BUILD_URL\", \
                    \"text\": \"This is a custom message notification $SLACK_MENTIONS\", \
                    \"author_name\": \"\", \
                    \"author_link\": \"\", \
                    \"title\": \"\", \
                    \"title_link\": \"\", \
                    \"footer\": \"\", \
                    \"ts\": \"\", \
                    \"fields\": [ \
                      { \
                        \"title\": \"Project\", \
                        \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                        \"short\": true \
                      }, \
                      { \
                        \"title\": \"Job Number\", \
                        \"value\": \"$CIRCLE_BUILD_NUM\", \
                        \"short\": true \
                      } \
                    ], \
                    \"image_url\": \"\", \
                    \"actions\": [ \
                      { \
                        \"type\": \"button\", \
                        \"text\": \"Visit Job\", \
                        \"url\": \"$CIRCLE_BUILD_URL\" \
                      } \
                    ], \
                    \"color\": \"#42e2f4\" \
                  } \
                ] \
              }" ${SLACK_WEBHOOK}
          fi
        name: Slack Notification
        shell: /bin/bash
  slack/approval-notification:
    docker:
    - environment:
        TERM: dumb
      image: cibuilds/base:latest
    resource_class: small
    steps:
    - run:
        command: |
          if [ ! -x /bin/bash ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: |
          # Provide error if no webhook is set and error. Otherwise continue
          if [ -z "${SLACK_WEBHOOK}" ]; then
            echo "NO SLACK WEBHOOK SET"
            echo "Please input your SLACK_WEBHOOK value either in the settings for this project, or as a parameter for this orb."
            exit 1
          else
            #Create Members string
            if [ -n "" ]; then
              IFS="," read -ra SLACK_MEMBERS <<< ""
              for i in "${SLACK_MEMBERS[@]}"; do
                if [ $(echo ${i} | head -c 1) == "S" ]; then
                  SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
                elif echo ${i} | grep -E "^(here|channel|everyone)$" > /dev/null; then
                  SLACK_MENTIONS="${SLACK_MENTIONS}<!${i}> "
                else
                  SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
                fi
              done
            fi

            curl -X POST -H 'Content-type: application/json' \
              --data \
              "{ \
                \"attachments\": [ \
                  { \
                    \"fallback\": \"Pending approval - https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}\", \
                    \"text\": \"Pending approval $SLACK_MENTIONS\", \
                    \"fields\": [ \
                      { \
                        \"title\": \"Project\", \
                        \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                        \"short\": true \
                      }, \
                      { \
                        \"title\": \"Job Number\", \
                        \"value\": \"$CIRCLE_BUILD_NUM\", \
                        \"short\": true \
                      } \
                    ], \
                    \"actions\": [ \
                      { \
                        \"type\": \"button\", \
                        \"text\": \"Visit Workflow\", \
                        \"url\": \"https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}\" \
                      } \
                    ], \
                    \"color\": \"#3AA3E3\" \
                  } \
                ] \
              }" ${SLACK_WEBHOOK}
            echo "Awaiting approval notified."
          fi
        name: Slack - Sending Approval Notification
        shell: /bin/bash
  staging_deploy:
    docker:
    - image: circleci/python:3.8
    steps:
    - deploy:
        name: Staging Deployment
        command: |
          echo 'DEPLOYING STAG!!!'
workflows:
  simple_workflow:
    jobs:
    - build
    - test
    - slack/approval-notification:
        requires:
        - build
    - wait_for_approve:
        type: approval
        requires:
        - build
    - staging_deploy:
        requires:
        - wait_for_approve
  version: 2

# Original config.yml file:
# version: 2.1
# 
# executors:
#   python-executor:
#     docker:
#       - image: circleci/python:3.8
# 
# aliases:
#   - &ola
#     run:
#       name: say ola
#       command: |
#         echo \"Ola!\"
# orbs:
#   slack: circleci/slack@3.4.2
# 
# jobs:
#   build:
#     executor: python-executor
#     steps:
#       - run:
#           name: The First Step
#           command: |
#             echo 'Hello World!'
#             echo 'This is the delivery pipeline'
#       - *ola
#   test:
#     executor: python-executor
#     steps:
#       - run:
#           name: The First Step
#           command: |
#             echo 'Hello World!'
#             echo 'This is the delivery pipeline'
#       - slack/notify:
#           color: '#42e2f4'
#           message: This is a custom message notification
#           webhook: ${SLACK_WEBHOOK}
#   staging_deploy:
#     executor: python-executor
#     steps:
#       - deploy:
#           name: Staging Deployment
#           command: |
#             echo 'DEPLOYING STAG!!!'
# 
# workflows:
#   simple_workflow:
#     jobs:
#       - build
#       - test
#       - slack/approval-notification:
#           requires:
#             - build
#           message: Pending approval
#           webhook: ${SLACK_WEBHOOK}
#       - wait_for_approve:
#           type: approval
#           requires:
#             - build
#       - staging_deploy:
#           requires:
#             - wait_for_approve